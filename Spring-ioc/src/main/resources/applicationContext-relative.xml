<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
   <bean id="dept" class="com.zm.bean.relative.Dept">
       <property name="deptId" value="1"/>
       <property name="deptName" value="秘书部"/>
   </bean>
    <!--===================================继承关系=========================================-->
    <!--使用继承Bean，parent属性可以指定要继承的Bean-->
   <!--<bean id="dept02" parent="dept"></bean>-->

    <!--子 Bean 可以覆盖从父 Bean 继承过来的配置-->
   <!-- <bean id="dept03" parent="dept">
        <property name="deptName" value="开发部"/>
    </bean>-->

    <!--抽象bean：bean的abstract属性的值为true。B这样的Bean不能被IOC容器实
    例化，只能被用来继承配置。在子Bean中写实现的属性-->
  <!--  <bean id="dept04" abstract="true" class="com.zm.bean.relative.Dept"></bean>
    <bean id="dept05" parent="dept04">
        <property name="deptId" value="1001"/>
        <property name="deptName" value="国际业务部"/>
    </bean>-->

   <!-- <bean id="abst" abstract="true" ></bean>
    <bean id="dept05" parent="abst" class="com.zm.bean.relative.Dept">
        <property name="deptId" value="1001"/>
        <property name="deptName" value="国际业务部"/>
    </bean>-->

    <!--====================================依赖关系==========================================-->
     <!--Employee依赖于Dept-->
    <bean id="emp" class="com.zm.bean.relative.Employee" p:name="张若云" p:age="21"></bean>

</beans>